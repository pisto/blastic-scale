; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
platform = renesas-ra@1.5.0
board = uno_r4_wifi
framework = arduino
monitor_speed = 115200
build_src_flags =
    ; serial monitor speed, match with monitor_speed above
    -DBLASTIC_MONITOR_SPEED=115200
    ; expose git status in defines
    !python ./scripts/git_rev_macro.py
    -DBLASTIC_BUILD_SYSTEM=\"platformio\"
build_flags =
    ; FreeRTOS configuration
    -DconfigUSE_TIME_SLICING=1 -DconfigUSE_TICKLESS_IDLE=0 -DconfigUSE_IDLE_HOOK=1
    -DconfigUSE_MUTEXES=1 -DconfigUSE_RECURSIVE_MUTEXES=1 -DconfigUSE_TIMERS=1
    ; support static allocation, and pretend we allocate the FreeRTOS heap (we don't, but catch accidental heap usage as link errors)
    -DconfigSUPPORT_STATIC_ALLOCATION=1 -DconfigAPPLICATION_ALLOCATED_HEAP=1
    ; make stdlib heap management safe under FreeRTOS
    -Wl,--wrap=__malloc_lock -Wl,--wrap=__malloc_unlock
    ; hook malloc failure both in FreeRTOS and newlib
    -DconfigUSE_MALLOC_FAILED_HOOK=1
    -Wl,--wrap=_malloc_r
    -DconfigCHECK_FOR_STACK_OVERFLOW=2 -fstack-usage
    ; help with stack size debugging
    ; print out symbol cross references during linking
    -Wl,--cref
    ; emit line numbers for addr2line usage
    -g1
lib_deps =
    arduino-libraries/SD@1.3.0
    arduino-libraries/ArduinoGraphics@1.1.3
    arduino-libraries/ArduinoHttpClient@0.6.1
    delta-g/R4_Touch@1.1
    densaugeo/base64@1.4.0
    arduino-libraries/NTPClient@3.2.1
monitor_echo = yes
monitor_filters =
    ; TODO XXX backspace/delete is handled as garbage
    send_on_enter
    time

[env:dev]
build_type = release
; TODO pass default calibration parameters from here
